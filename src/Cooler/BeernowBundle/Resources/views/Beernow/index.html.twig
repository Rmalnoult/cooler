{% extends 'CoolerMainBundle::layout.html.twig' %}

{% block css %}
	{{parent()}}
	<link rel="stylesheet" type="text/css" href="{{asset('css/sidemenu.css')}}">
	<style>
	  #locationField, #controls {
	    position: relative;
	    width: 480px;
	  }
	  #autocomplete {
	    position: absolute;
	    top: 0px;
	    left: 0px;
	    width: 99%;
	  }
	  .label {
	    text-align: right;
	    font-weight: bold;
	    width: 100px;
	    color: #303030;
	  }
	  #address {
	    border: 1px solid #000090;
	    background-color: #f0f0ff;
	    width: 480px;
	    padding-right: 2px;
	  }
	  #address td {
	    font-size: 10pt;
	  }
	  .field {
	    width: 99%;
	  }
	  .slimField {
	    width: 80px;
	  }
	  .wideField {
	    width: 200px;
	  }
	  #locationField {
	    height: 20px;
	    margin-bottom: 2px;
	  }
	</style>

	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places"></script>
	<script>
	var placeSearch, autocomplete;
	var componentForm = {
	  locality: 'long_name',
	};

	function initialize() {
	  // Create the autocomplete object, restricting the search
	  // to geographical location types.
	  autocomplete = new google.maps.places.Autocomplete(
	      /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
	      { type : [ "bar"]  });
	  // When the user selects an address from the dropdown,
	  // populate the address fields in the form.
	  google.maps.event.addListener(autocomplete, 'place_changed', function() {
	    fillInAddress();
	  });
	}

	function fillInAddress() {
	  // Get the place details from the autocomplete object.
	  var place = autocomplete.getPlace();

	  for (var component in componentForm) {
	    document.getElementById(component).value = '';
	    document.getElementById(component).disabled = false;
	  }

	  // Get each component of the address from the place details
	  // and fill the corresponding field on the form.
	  for (var i = 0; i < place.address_components.length; i++) {
	    var addressType = place.address_components[i].types[0];
	    if (componentForm[addressType]) {
	      var val = place.address_components[i][componentForm[addressType]];
	      document.getElementById(addressType).value = val;
	    }
	  }
	}

	// Bias the autocomplete object to the user's geographical location,
	// as supplied by the browser's 'navigator.geolocation' object.
	function geolocate() {
	  if (navigator.geolocation) {
	    navigator.geolocation.getCurrentPosition(function(position) {
	      var geolocation = new google.maps.LatLng(
	          position.coords.latitude, position.coords.longitude);
	      var circle = new google.maps.Circle({
	        center: geolocation,
	        radius: position.coords.accuracy
	      });
	      autocomplete.setBounds(circle.getBounds());
	    });
	  }
	}
	geolocate();
	</script>
{% endblock css %}

{% block content %}
<div class="container opacityOff">
	<div id="locationField" onload="initialize()">
	  <input id="autocomplete" placeholder="Enter your address"
	        type="text"></input>
	</div>

<ul id="autocomplete">
	{% for friend in friends %}
		<li class="beer" >
			<a href="" >
				<img src="{{ friend.picture.data.url }}" alt="profile picture" />
				<h2>{{ friend.name }}</h2>
			</a>
		</li>
	{% endfor %}
</ul>


</div>
{% endblock content %}